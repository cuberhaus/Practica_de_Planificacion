(define (problem agencia_viaje)
    (:domain agencia_viaje)
    (:objects
        cg1  c1  c2  c3  c4  c5  c6   - ciudad
        vg1  v1  v2  v3  v4  v5  v6  v7  v8  v9  v10   - vuelo
        h1  h2  h3  h4  h5  h6  h7  h8  h9  h10  - hotel
        dias1  dias2  dias3  dias4  - dias_por_ciudad
    )
    (:init
        (= (num_ciudades_escogidas) 0)
        (= (min_ciudades_a_recoger) 3 )
        (= (min_dias_por_ciudad) 1 )
        (= (max_dias_por_ciudad) 4 )
        (= (num_dias_recorrido) 0)
        (= (min_dias_recorrido) 7 )
        (= (dias_por_ciudad dias1) 1)
        (= (dias_por_ciudad dias2) 2)
        (= (dias_por_ciudad dias3) 3)
        (= (dias_por_ciudad dias4) 4)
        (= (min_precio_plan) 100)
        (= (max_precio_plan) 10000)
        (= (precio_plan) 0)
        (current_ciudad cg1)
        (ciudad_visitada cg1)
        (va_a vg1 cg1 c1)
        (va_a vg1 cg1 c2)
        (va_a vg1 cg1 c3)
        (va_a vg1 cg1 c4)
        (va_a vg1 cg1 c5)
        (va_a vg1 cg1 c6)
        (va_a v1 c5 c6 )
        (va_a v2 c6 c2 )
        (va_a v3 c2 c1 )
        (va_a v4 c1 c3 )
        (va_a v5 c3 c4 )
        (va_a v6 c4 c5 )
        (va_a v7 c5 c6 )
        (va_a v8 c6 c2 )
        (va_a v9 c2 c1 )
        (va_a v10 c1 c3 )
        (esta_en h1 c4 )
        (esta_en h2 c5 )
        (esta_en h3 c6 )
        (esta_en h4 c2 )
        (esta_en h5 c1 )
        (esta_en h6 c3 )
        (esta_en h7 c4 )
        (esta_en h8 c5 )
        (esta_en h9 c6 )
        (esta_en h10 c2 )
        (= (precio_hotel h1) 19)
        (= (precio_hotel h2) 197)
        (= (precio_hotel h3) 49)
        (= (precio_hotel h4) 13)
        (= (precio_hotel h5) 112)
        (= (precio_hotel h6) 47)
        (= (precio_hotel h7) 223)
        (= (precio_hotel h8) 36)
        (= (precio_hotel h9) 146)
        (= (precio_hotel h10) 291)
        (= (precio_vuelo v1) 219)
        (= (precio_vuelo v2) 77)
        (= (precio_vuelo v3) 255)
        (= (precio_vuelo v4) 116)
        (= (precio_vuelo v5) 23)
        (= (precio_vuelo v6) 31)
        (= (precio_vuelo v7) 218)
        (= (precio_vuelo v8) 146)
        (= (precio_vuelo v9) 294)
        (= (precio_vuelo v10) 50)
        (= (precio_vuelo vg1) 0)
 
    )
        
    (:goal (and
        (<= (min_precio_plan) (precio_plan))
        (>= (max_precio_plan) (precio_plan))
        (<= (min_ciudades_a_recoger) (num_ciudades_escogidas))
        (<= (min_dias_recorrido) (num_dias_recorrido))
    ))
    ;; maximize negativo minimize negativo o viceversa
    ;; minimize va DESPUES del goal
    (:metric minimize 
        (precio_plan)
    )
)
