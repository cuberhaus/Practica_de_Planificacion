(define (problem agencia_viaje)
    (:domain agencia_viaje)
    (:objects
        cg1  c1  c2  c3  c4  c5  c6  c7  c8  c9  c10   - ciudad
        vg1  v1  v2  v3  v4  v5  v6  v7  v8  v9  v10  v11  v12  v13  v14  v15  v16  v17  v18  v19  v20   - vuelo
        h1  h2  h3  h4  h5  h6  h7  h8  h9  h10  h11  h12  h13  h14  h15  h16  h17  h18  h19  h20  - hotel
        dias1  dias2  dias3  - dias_por_ciudad
    )
    (:init
        (= (num_ciudades_escogidas) 0)
        (= (min_ciudades_a_recoger) 5 )
        (= (min_dias_por_ciudad) 1 )
        (= (max_dias_por_ciudad) 3 )
        (= (num_dias_recorrido) 0)
        (= (min_dias_recorrido) 5 )
        (= (dias_por_ciudad dias1) 1)
        (= (dias_por_ciudad dias2) 2)
        (= (dias_por_ciudad dias3) 3)
        (= (interes_ciudad cg1) 2)
        (= (interes_ciudad c1) 6)
        (= (interes_ciudad c2) 0)
        (= (interes_ciudad c3) 0)
        (= (interes_ciudad c4) 0)
        (= (interes_ciudad c5) 5)
        (= (interes_ciudad c6) 0)
        (= (interes_ciudad c7) 8)
        (= (interes_ciudad c8) 8)
        (= (interes_ciudad c9) 2)
        (= (min_precio_plan) 100)
        (= (max_precio_plan) 800)
        (= (precio_plan) 0)
        (current_ciudad cg1)
        (= (interes_ciudad cg1) 0)
        (= (interes_actual) 0)
        (ciudad_visitada cg1)
        (va_a vg1 cg1 c1)
        (va_a vg1 cg1 c2)
        (va_a vg1 cg1 c3)
        (va_a vg1 cg1 c4)
        (va_a vg1 cg1 c5)
        (va_a vg1 cg1 c6)
        (va_a vg1 cg1 c7)
        (va_a vg1 cg1 c8)
        (va_a vg1 cg1 c9)
        (va_a vg1 cg1 c10)
        (va_a v1 c7 c10 )
        (va_a v2 c10 c5 )
        (va_a v3 c5 c3 )
        (va_a v4 c3 c1 )
        (va_a v5 c1 c4 )
        (va_a v6 c4 c9 )
        (va_a v7 c9 c8 )
        (va_a v8 c8 c2 )
        (va_a v9 c2 c6 )
        (va_a v10 c6 c7 )
        (va_a v11 c7 c4 )
        (va_a v12 c4 c9 )
        (va_a v13 c9 c8 )
        (va_a v14 c8 c5 )
        (va_a v15 c5 c3 )
        (va_a v16 c3 c2 )
        (va_a v17 c2 c6 )
        (va_a v18 c6 c10 )
        (va_a v19 c10 c1 )
        (va_a v20 c1 c7 )
        (esta_en h1 c1 )
        (esta_en h2 c7 )
        (esta_en h3 c4 )
        (esta_en h4 c9 )
        (esta_en h5 c8 )
        (esta_en h6 c5 )
        (esta_en h7 c3 )
        (esta_en h8 c2 )
        (esta_en h9 c6 )
        (esta_en h10 c10 )
        (esta_en h11 c1 )
        (esta_en h12 c7 )
        (esta_en h13 c4 )
        (esta_en h14 c9 )
        (esta_en h15 c8 )
        (esta_en h16 c5 )
        (esta_en h17 c3 )
        (esta_en h18 c2 )
        (esta_en h19 c6 )
        (esta_en h20 c10 )
        (= (precio_hotel h1) 54)
        (= (precio_hotel h2) 44)
        (= (precio_hotel h3) 120)
        (= (precio_hotel h4) 153)
        (= (precio_hotel h5) 206)
        (= (precio_hotel h6) 195)
        (= (precio_hotel h7) 143)
        (= (precio_hotel h8) 163)
        (= (precio_hotel h9) 276)
        (= (precio_hotel h10) 36)
        (= (precio_hotel h11) 194)
        (= (precio_hotel h12) 101)
        (= (precio_hotel h13) 241)
        (= (precio_hotel h14) 189)
        (= (precio_hotel h15) 216)
        (= (precio_hotel h16) 156)
        (= (precio_hotel h17) 37)
        (= (precio_hotel h18) 295)
        (= (precio_hotel h19) 45)
        (= (precio_hotel h20) 78)
        (= (precio_vuelo v1) 73)
        (= (precio_vuelo v2) 189)
        (= (precio_vuelo v3) 235)
        (= (precio_vuelo v4) 177)
        (= (precio_vuelo v5) 126)
        (= (precio_vuelo v6) 280)
        (= (precio_vuelo v7) 151)
        (= (precio_vuelo v8) 175)
        (= (precio_vuelo v9) 18)
        (= (precio_vuelo v10) 20)
        (= (precio_vuelo v11) 77)
        (= (precio_vuelo v12) 50)
        (= (precio_vuelo v13) 12)
        (= (precio_vuelo v14) 225)
        (= (precio_vuelo v15) 179)
        (= (precio_vuelo v16) 35)
        (= (precio_vuelo v17) 138)
        (= (precio_vuelo v18) 51)
        (= (precio_vuelo v19) 193)
        (= (precio_vuelo v20) 107)
        (= (precio_vuelo vg1) 0)
 
    )
        
    (:goal (and
        (<= (min_precio_plan) (precio_plan))
        (>= (max_precio_plan) (precio_plan))
        (<= (min_ciudades_a_recoger) (num_ciudades_escogidas))
        (<= (min_dias_recorrido) (num_dias_recorrido))
    ))
    ;; maximize negativo minimize negativo o viceversa
    ;; minimize va DESPUES del goal
    (:metric minimize 
        (+ (precio_plan) (* (interes_actual) 400))
    )
)